[{"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/pages/SignUp/index.tsx":"1","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Input/index.tsx":"2","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Input/styles.ts":"3","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Tooltip/styles.ts":"4","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Tooltip/index.tsx":"5","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/styles/global.ts":"6","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/pages/SignIn/index.tsx":"7","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/App.tsx":"8"},{"size":2446,"mtime":1611887855225,"results":"9","hashOfConfig":"10"},{"size":1807,"mtime":1611889176855,"results":"11","hashOfConfig":"10"},{"size":1292,"mtime":1611889784973,"results":"12","hashOfConfig":"10"},{"size":908,"mtime":1611890554521,"results":"13","hashOfConfig":"10"},{"size":401,"mtime":1611889297551,"results":"14","hashOfConfig":"10"},{"size":499,"mtime":1611797597115,"results":"15","hashOfConfig":"10"},{"size":2269,"mtime":1611890656061,"results":"16","hashOfConfig":"10"},{"size":294,"mtime":1611889990698,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"s6kha9",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/pages/SignUp/index.tsx",["35"],"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Input/index.tsx",["36"],"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Input/styles.ts",[],"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Tooltip/styles.ts",[],"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/components/Tooltip/index.tsx",[],"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/styles/global.ts",[],"/home/heron/Área de Trabalho/GoStack/gobarber-web/src/pages/SignIn/index.tsx",["37"],"import React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { Form } from '@unform/web';\nimport { FormHandles } from '@unform/core';\nimport * as Yup from 'yup';\n\nimport logoImg from '../../assets/logo.svg';\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\nimport getValidationErrors from '../../utils/getValidationErros';\n\nconst SignIn: React.FC = () => {\n    const formRef = useRef<FormHandles>(null);\n\n    const handleSubmit = useCallback(async (data: any) => {\n        formRef.current?.setErrors({});\n\n        try {\n            const schema = Yup.object().shape({\n                name: Yup.string().required('Nome obrigatório.'),\n                email: Yup.string()\n                    .required('E-mail obrigatório.')\n                    .email('Digite um e-mail válido.'),\n                password: Yup.string().required('Insira sua senha.'),\n            });\n\n            await schema.validate(data, {\n                abortEarly: false,\n            });\n        } catch (err) {\n            const errors = getValidationErrors(err);\n            formRef.current?.setErrors(errors);\n        }\n    }, []);\n\n    return (\n        <Container>\n            <Content>\n                <img src={logoImg} alt=\"GoBarber\" />\n                <Form ref={formRef} onSubmit={handleSubmit}>\n                    <h1>Faça seu logon</h1>\n\n                    <Input\n                        name=\"email\"\n                        icon={FiMail}\n                        type=\"text\"\n                        placeholder=\"E-mail\"\n                    />\n                    <Input\n                        name=\"password\"\n                        icon={FiLock}\n                        type=\"password\"\n                        placeholder=\"Senha\"\n                    />\n\n                    <Button type=\"submit\">Entrar</Button>\n\n                    <a href=\"forgot\">Esqueci minha senha</a>\n                </Form>\n\n                <a href=\"login\">\n                    <FiLogIn />\n                    Criar conta\n                </a>\n            </Content>\n            <Background />\n        </Container>\n    );\n};\n\nexport default SignIn;\n","/home/heron/Área de Trabalho/GoStack/gobarber-web/src/App.tsx",["38"],{"ruleId":"39","severity":1,"message":"40","line":18,"column":51,"nodeType":"41","messageId":"42","endLine":18,"endColumn":54,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":12,"column":8,"nodeType":"46","messageId":"47","endLine":12,"endColumn":15},{"ruleId":"39","severity":1,"message":"40","line":17,"column":51,"nodeType":"41","messageId":"42","endLine":17,"endColumn":54,"suggestions":"48"},{"ruleId":"44","severity":1,"message":"49","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":14},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["50","51"],"@typescript-eslint/no-unused-vars","'Tooltip' is defined but never used.","Identifier","unusedVar",["52","53"],"'SignUp' is defined but never used.",{"messageId":"54","fix":"55","desc":"56"},{"messageId":"57","fix":"58","desc":"59"},{"messageId":"54","fix":"60","desc":"56"},{"messageId":"57","fix":"61","desc":"59"},"suggestUnknown",{"range":"62","text":"63"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"62","text":"64"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"65","text":"63"},{"range":"65","text":"64"},[625,628],"unknown","never",[612,615]]